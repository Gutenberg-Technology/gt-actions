---
name: Reusable deploy frontend

on:
  workflow_call:
    inputs:
      env:
        type: string
        description: "Environment"
        required: true
      working-directory:
        type: string
        description: "Working directory where the source code is"
        required: true
      artifact-name:
        type: string
        description: "The name of the artifact to download"
        required: true
    secrets:
      aws-access-key-id:
        description: "AWS access key ID"
        required: true
      aws-secret-access-key:
        description: "AWS secret access key"
        required: true
      github-token:
        description: "Github Token to create GitHub deployments"
        required: true

jobs:
  deploy-frontend:
    name: "Deploy"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          cat ${{ inputs.working-directory }}/.aws/${{ inputs.env }}.env >> $GITHUB_ENV
          cat $GITHUB_ENV

      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@v2
        id: deployment
        with:
          token: ${{ secrets.github-token }}

      - name: Update deployment status (In Progress)
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.github-token }}
          state: "in_progress"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact-name }}

      - name: Untar artifact
        run: tar -xvf ${{ inputs.artifact-name }}.tgz

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ env.S3_BUCKET_REGION }}

      - name: Deploy to S3
        uses: reggionick/s3-deploy@v3.2.0
        with:
          folder: ${{ env.DIST_PATH }}
          bucket: ${{ env.S3_BUCKET }}
          bucket-region: ${{ env.S3_BUCKET_REGION }}
          dist-id: ${{ env.DIST_ID }}
          invalidation: /
          delete-removed: true
          no-cache: true
          private: true
          filesToInclude: ".*/*,*/*,**"

      - name: Update deployment status (Success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.github-token }}
          state: "success"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (Failed)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.github-token }}
          state: "failure"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

